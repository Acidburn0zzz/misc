#############################################################################
# Makefile for building: bin/daleks
# Generated by qmake (2.01a) (Qt 4.4.3) on: Fri Mar 6 21:20:33 2009
# Project:  daleks.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile daleks.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I. -I/usr/X11R6/include -Imoc -I.
LINK          = g++
LFLAGS        = -Wl,--no-undefined
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = board.cpp \
		boardgl.cpp \
		controlleur.cpp \
		dalek.cpp \
		doc.cpp \
		main.cpp \
		partie.cpp \
		vue.cpp moc/moc_board.cpp \
		moc/moc_boardgl.cpp \
		moc/moc_vue.cpp
OBJECTS       = obj/board.o \
		obj/boardgl.o \
		obj/controlleur.o \
		obj/dalek.o \
		obj/doc.o \
		obj/main.o \
		obj/partie.o \
		obj/vue.o \
		obj/moc_board.o \
		obj/moc_boardgl.o \
		obj/moc_vue.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		daleks.pro
QMAKE_TARGET  = daleks
DESTDIR       = bin/
TARGET        = bin/daleks

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) bin/ || $(MKDIR) bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: daleks.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile daleks.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile daleks.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/daleks1.0.0 || $(MKDIR) obj/daleks1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/daleks1.0.0/ && $(COPY_FILE) --parents board.h boardgl.h controlleur.h dalek.h doc.h partie.h vue.h obj/daleks1.0.0/ && $(COPY_FILE) --parents board.cpp boardgl.cpp controlleur.cpp dalek.cpp doc.cpp main.cpp partie.cpp vue.cpp obj/daleks1.0.0/ && (cd `dirname obj/daleks1.0.0` && $(TAR) daleks1.0.0.tar daleks1.0.0 && $(COMPRESS) daleks1.0.0.tar) && $(MOVE) `dirname obj/daleks1.0.0`/daleks1.0.0.tar.gz . && $(DEL_FILE) -r obj/daleks1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc/moc_board.cpp moc/moc_boardgl.cpp moc/moc_vue.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc/moc_board.cpp moc/moc_boardgl.cpp moc/moc_vue.cpp
moc/moc_board.cpp: board.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) board.h -o moc/moc_board.cpp

moc/moc_boardgl.cpp: boardgl.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) boardgl.h -o moc/moc_boardgl.cpp

moc/moc_vue.cpp: vue.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) vue.h -o moc/moc_vue.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

obj/board.o: board.cpp board.h \
		dalek.h \
		doc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/board.o board.cpp

obj/boardgl.o: boardgl.cpp boardgl.h \
		dalek.h \
		doc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/boardgl.o boardgl.cpp

obj/controlleur.o: controlleur.cpp controlleur.h \
		dalek.h \
		partie.h \
		doc.h \
		vue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/controlleur.o controlleur.cpp

obj/dalek.o: dalek.cpp dalek.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/dalek.o dalek.cpp

obj/doc.o: doc.cpp doc.h \
		dalek.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/doc.o doc.cpp

obj/main.o: main.cpp controlleur.h \
		dalek.h \
		partie.h \
		doc.h \
		vue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o main.cpp

obj/partie.o: partie.cpp controlleur.h \
		dalek.h \
		partie.h \
		doc.h \
		vue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/partie.o partie.cpp

obj/vue.o: vue.cpp board.h \
		boardgl.h \
		controlleur.h \
		dalek.h \
		partie.h \
		doc.h \
		vue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/vue.o vue.cpp

obj/moc_board.o: moc/moc_board.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_board.o moc/moc_board.cpp

obj/moc_boardgl.o: moc/moc_boardgl.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_boardgl.o moc/moc_boardgl.cpp

obj/moc_vue.o: moc/moc_vue.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_vue.o moc/moc_vue.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

