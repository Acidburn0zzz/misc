-- Je n'ai pas fait de modifications dans ce script puisque je devrai l'adapter pour SQLite éventuellement
CREATE TABLE P_TYPE
(
  NOTYPE NUMBER(1, 0) NOT NULL,
  NOMTYPE VARCHAR2(10 BYTE)
, CONSTRAINT P_TYPE_TYPE_PK PRIMARY KEY
  (
    NOTYPE
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_SUIVI_ATELIER
(
  NO_SUIVI_ATEL NUMBER(4, 0) NOT NULL,
  NO_ATEL NUMBER(4, 0) NOT NULL,
  NO_ANCIEN_LOC VARCHAR2(10) NOT NULL
, CONSTRAINT P_SUIVI_ATELIER_PK PRIMARY KEY
  (
    NO_SUIVI_ATEL
  )
  ENABLE
)
;

CREATE TABLE P_REGION
(
  NOREGION NUMBER(3, 0) NOT NULL,
  NOMREGION VARCHAR2(100 BYTE)
, CONSTRAINT P_REGION_PK PRIMARY KEY
  (
    NOREGION
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_LOCAL
(
  NOLOCAL VARCHAR2(10 BYTE) NOT NULL,
  CAPACITE NUMBER(3, 0)
, CONSTRAINT P_LOCAL_NUMERO_PK PRIMARY KEY
  (
    NOLOCAL
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_INSCRIPTION_ARCHIVE
(
  NO_INS_ARCH NUMBER(4) NOT NULL,
  NOAUDITEUR NUMBER(4, 0) NOT NULL,
  NOATEL NUMBER(4, 0) NOT NULL,
  DATEINSCRIPTION DATE,
  MODE_PAIEMENT CHAR(1 BYTE),
  NO_CARTE VARCHAR2(20 BYTE),
  NO_CHEQUE NUMBER(7, 0),
  DATE_EXPIRE DATE,
  ACQUITTER NUMBER(1, 0),
  CONFIRMATIONENVOYEE NUMBER(1, 0),
  EVENEMENT VARCHAR2(15 BYTE),
  DATEMODIF DATE
, CONSTRAINT P_INSCRIPTION_ARCH_PK PRIMARY KEY
  (
    NO_INS_ARCH
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_INSCRIPTION
(
  NOAUDITEUR NUMBER(4, 0) NOT NULL,
  NOATEL NUMBER(4, 0) NOT NULL,
  DATEINSCRIPTION DATE,
  MODE_PAIEMENT CHAR(1 BYTE),
  NO_CARTE VARCHAR2(20 BYTE),
  NO_CHEQUE NUMBER(7, 0),
  DATE_EXPIRE DATE,
  ACQUITTER NUMBER(1, 0),
  CONFIRMATIONENVOYEE NUMBER(1, 0)
, CONSTRAINT P_INSCRIPTION_PK PRIMARY KEY
  (
    NOAUDITEUR,
    NOATEL
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_EXPOSANT_ARCHIVE
(
  NO_EXP_ARCH NUMBER(4) NOT NULL,
  NOEXPOSANT NUMBER(4, 0) NOT NULL,
  NOM VARCHAR2(60 BYTE),
  PRENOM VARCHAR2(30 BYTE),
  NOCOEQUIPIER NUMBER(3, 0),
  NOECOLE NUMBER(4, 0),
  RUE VARCHAR2(25 BYTE),
  VILLE VARCHAR2(20 BYTE),
  CODE_POSTAL VARCHAR2(6 BYTE),
  TELEPHONE NUMBER(10, 0),
  COURRIEL VARCHAR2(20 BYTE),
  CREEPAR VARCHAR2(30 BYTE),
  DATESUPRESSION DATE
, CONSTRAINT P_EXPOSANT_NOEXPOSANT_ARCH_PK PRIMARY KEY
  (
    NO_EXP_ARCH
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_EXPOSANT
(
  NOEXPOSANT NUMBER(4, 0) NOT NULL,
  NOM VARCHAR2(60 BYTE),
  PRENOM VARCHAR2(30 BYTE),
  NOCOEQUIPIER NUMBER(3, 0),
  NOECOLE NUMBER(4, 0),
  RUE VARCHAR2(25 BYTE),
  VILLE VARCHAR2(20 BYTE),
  CODE_POSTAL VARCHAR2(6 BYTE),
  TELEPHONE NUMBER(10, 0),
  COURRIEL VARCHAR2(20 BYTE),
  CREEPAR VARCHAR2(30 BYTE)
, CONSTRAINT P_EXPOSANT_NOEXPOSANT_PK PRIMARY KEY
  (
    NOEXPOSANT
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_EXPO
(
  NOEXPO NUMBER(4, 0) NOT NULL,
  DATE_DEBUT DATE,
  DATE_FIN DATE,
  NOMHOTEL VARCHAR2(30 BYTE),
  RUE VARCHAR2(25 BYTE),
  VILLE VARCHAR2(20 BYTE),
  CODE_POSTAL VARCHAR2(6 BYTE),
  TELEPHONE NUMBER(10, 0),
  COURRIEL VARCHAR2(30 BYTE),
  CREEPAR VARCHAR2(30 BYTE)
, CONSTRAINT P_EXPO_NOEXPO_PK PRIMARY KEY
  (
    NOEXPO
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_EVALUATION
(
  NOEVAL NUMBER(4, 0) NOT NULL,
  JUGE NUMBER(4, 0) NOT NULL,
  COTE NUMBER(1, 0),
  CRITERE NUMBER(1, 0) NOT NULL,
  NOATEL NUMBER(3, 0) NOT NULL
, CONSTRAINT P_EVALUATION_PK PRIMARY KEY
  (
    NOEVAL
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_ECOLE
(
  NOECOLE NUMBER(4, 0) NOT NULL,
  NOMECOLE VARCHAR2(100 BYTE),
  NOREGION NUMBER(3, 0),
  TUTEUR VARCHAR2(50 BYTE),
  RUE VARCHAR2(25 BYTE),
  VILLE VARCHAR2(20 BYTE),
  CODE_POSTAL VARCHAR2(6 BYTE),
  TELEPHONE NUMBER(10, 0),
  COURRIEL VARCHAR2(25 BYTE)
, CONSTRAINT P_ECOLE_NOECOLE_PK PRIMARY KEY
  (
    NOECOLE
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_CRITERE
(
  NOCRITERE NUMBER(1, 0) NOT NULL,
  NOMCRITERE VARCHAR2(25 BYTE)
, CONSTRAINT P_CRITERE_PK PRIMARY KEY
  (
    NOCRITERE
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_CATEGORIE
(
  NOCATEGORIE NUMBER(5, 0) NOT NULL,
  NOM VARCHAR2(25 BYTE),
  DESCRIPTION VARCHAR2(40 BYTE)
, CONSTRAINT P_CATEGORIE_PK PRIMARY KEY
  (
    NOCATEGORIE
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_AUDITEUR
(
  NOAUDITEUR NUMBER(4, 0) NOT NULL,
  CODEAUDITEUR VARCHAR2(7 BYTE),
  MOTDEPASSE VARCHAR2(7 BYTE),
  NOM VARCHAR2(60 BYTE),
  PRENOM VARCHAR2(40 BYTE),
  JUGE NUMBER(1, 0),
  RUE VARCHAR2(25 BYTE),
  VILLE VARCHAR2(20 BYTE),
  CODE_POSTAL VARCHAR2(6 BYTE),
  NOREGION NUMBER(3, 0),
  TELEPHONE NUMBER(10, 0),
  COURRIEL VARCHAR2(25 BYTE),
  STATUT VARCHAR2(1 BYTE)
, CONSTRAINT P_AUDITEUR_NO_PK PRIMARY KEY
  (
    NOAUDITEUR
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

CREATE TABLE P_ATELIER
(
  NOATEL NUMBER(3, 0) NOT NULL,
  TITRE VARCHAR2(30 BYTE),
  LANGUE CHAR(1 BYTE),
  ACETATE_ELEC NUMBER(1, 0),
  PORTABLE NUMBER(1, 0),
  DUREE NUMBER(3, 0),
  NBMAXIMUM NUMBER(3, 0),
  NOLOCAL VARCHAR2(10 BYTE),
  DATEATEL DATE,
  CREEPAR VARCHAR2(30 BYTE),
  DATECREATION DATE,
  COUTETUDIANT NUMBER(5, 2),
  COUTREGULIER NUMBER(5, 2),
  NOCATEGORIE NUMBER(5, 0) NOT NULL,
  NOTYPE NUMBER(1, 0) NOT NULL
, CONSTRAINT P_ATELIERS_NO_PK PRIMARY KEY
  (
    NOATEL
  )
  ENABLE
)
  TABLESPACE "USERS"
  LOGGING 
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    MINEXTENTS 1
    MAXEXTENTS 2147483645
    BUFFER_POOL DEFAULT
  )
;

ALTER TABLE P_INSCRIPTION
ADD CONSTRAINT P_INSCRIPTION_ATELIER_FK FOREIGN KEY
(
  NOATEL
)
REFERENCES P_ATELIER
(
  NOATEL
)
 ENABLE
;

ALTER TABLE P_INSCRIPTION
ADD CONSTRAINT P_INSCRIPTION_AUDITEUR_FK FOREIGN KEY
(
  NOAUDITEUR
)
REFERENCES P_AUDITEUR
(
  NOAUDITEUR
)
 ENABLE
;

ALTER TABLE P_EXPOSANT
ADD CONSTRAINT P_EXPOSANT_ECOLE_FK FOREIGN KEY
(
  NOECOLE
)
REFERENCES P_ECOLE
(
  NOECOLE
)
 ENABLE
;

ALTER TABLE P_EVALUATION
ADD CONSTRAINT P_EVALUATION_P_ATELIER_FK FOREIGN KEY
(
  NOATEL
)
REFERENCES P_ATELIER
(
  NOATEL
)
 ENABLE
;

ALTER TABLE P_EVALUATION
ADD CONSTRAINT P_EVALUATION_P_AUDITEUR_FK FOREIGN KEY
(
  JUGE
)
REFERENCES P_AUDITEUR
(
  NOAUDITEUR
)
 ENABLE
;

ALTER TABLE P_EVALUATION
ADD CONSTRAINT P_EVALUATION_P_CRITERE_FK FOREIGN KEY
(
  CRITERE
)
REFERENCES P_CRITERE
(
  NOCRITERE
)
 ENABLE
;

ALTER TABLE P_ECOLE
ADD CONSTRAINT P_ECOLE_REGION_FK FOREIGN KEY
(
  NOREGION
)
REFERENCES P_REGION
(
  NOREGION
)
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT P_ATELIER_LOCAL_FK FOREIGN KEY
(
  NOLOCAL
)
REFERENCES P_LOCAL
(
  NOLOCAL
)
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT P_ATELIER_P_CATEGORIE_FK FOREIGN KEY
(
  NOCATEGORIE
)
REFERENCES P_CATEGORIE
(
  NOCATEGORIE
)
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT P_ATELIER_P_EXPOSANT_FK1 FOREIGN KEY
(
  NOATEL
)
REFERENCES P_EXPOSANT
(
  NOEXPOSANT
)
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT P_ATELIER_P_TYPE_FK FOREIGN KEY
(
  NOTYPE
)
REFERENCES P_TYPE
(
  NOTYPE
)
 ENABLE
;

ALTER TABLE P_AUDITEUR
ADD CONSTRAINT STATUT CHECK
(STATUT = 'R' OR STATUT = 'E')
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT ACETATE_ELEC CHECK
(ACETATE_ELEC = 1 OR ACETATE_ELEC = 0)
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT DUREE CHECK
(DUREE IN (30, 45, 60, 90))
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT LANGUE CHECK
(LANGUE = 'A' OR LANGUE = 'F')
 ENABLE
;

ALTER TABLE P_ATELIER
ADD CONSTRAINT PORTABLE CHECK
(PORTABLE = 1 OR PORTABLE = 0)
 ENABLE
;

CREATE SEQUENCE SEQ_SUIVI_ATEL INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE SEQ_INSC_ARCH INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE SEQ_EXP_ARCH INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_TYPE INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_INSCRIPTION INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_EXPOSANT INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_EXPO INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_EVALUATION INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_ECOLE INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_CRITERE INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_CATEGORIE INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_AUDIT INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE P_SEQ_ATEL INCREMENT BY 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE
TRIGGER P_TYPE_TRG
BEFORE INSERT ON P_TYPE
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOTYPE IS NULL THEN
      SELECT P_SEQ_TYPE.NEXTVAL INTO :NEW.NOTYPE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_SUIVI_ATELIER_TRG
BEFORE INSERT ON P_SUIVI_ATELIER
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NO_SUIVI_ATEL IS NULL THEN
      SELECT SEQ_SUIVI_ATEL.NEXTVAL INTO :NEW.NO_SUIVI_ATEL FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_INSCRIPTION_TRG
BEFORE INSERT ON P_INSCRIPTION
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOAUDITEUR IS NULL THEN
      SELECT P_SEQ_INSCRIPTION.NEXTVAL INTO :NEW.NOAUDITEUR FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_INSCRIPTION_ARCHIVE_TRG
BEFORE INSERT ON P_INSCRIPTION_ARCHIVE
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NO_INS_ARCH IS NULL THEN
      SELECT SEQ_INSC_ARCH.NEXTVAL INTO :NEW.NO_INS_ARCH FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_EXPO_TRG
BEFORE INSERT ON P_EXPO
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOEXPO IS NULL THEN
      SELECT P_SEQ_EXPO.NEXTVAL INTO :NEW.NOEXPO FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_EXPOSANT_TRG
BEFORE INSERT ON P_EXPOSANT
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOEXPOSANT IS NULL THEN
      SELECT P_SEQ_EXPOSANT.NEXTVAL INTO :NEW.NOEXPOSANT FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_EXPOSANT_ARCHIVE_TRG
BEFORE INSERT ON P_EXPOSANT_ARCHIVE
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NO_EXP_ARCH IS NULL THEN
      SELECT SEQ_EXP_ARCH.NEXTVAL INTO :NEW.NO_EXP_ARCH FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_EVALUATION_TRG
BEFORE INSERT ON P_EVALUATION
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOEVAL IS NULL THEN
      SELECT P_SEQ_EVALUATION.NEXTVAL INTO :NEW.NOEVAL FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_ECOLE_TRG
BEFORE INSERT ON P_ECOLE
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOECOLE IS NULL THEN
      SELECT P_SEQ_ECOLE.NEXTVAL INTO :NEW.NOECOLE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_CRITERE_TRG
BEFORE INSERT ON P_CRITERE
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOCRITERE IS NULL THEN
      SELECT P_SEQ_CRITERE.NEXTVAL INTO :NEW.NOCRITERE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_CATEGORIE_TRG
BEFORE INSERT ON P_CATEGORIE
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOCATEGORIE IS NULL THEN
      SELECT P_SEQ_CATEGORIE.NEXTVAL INTO :NEW.NOCATEGORIE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_AUDITEUR_TRG
BEFORE INSERT ON P_AUDITEUR
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOAUDITEUR IS NULL THEN
      SELECT P_SEQ_AUDIT.NEXTVAL INTO :NEW.NOAUDITEUR FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/

CREATE
TRIGGER P_ATELIER_TRG
BEFORE INSERT ON P_ATELIER
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.NOATEL IS NULL THEN
      SELECT P_SEQ_ATEL.NEXTVAL INTO :NEW.NOATEL FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
  NULL;
END;
/
