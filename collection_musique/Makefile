#############################################################################
# Makefile for building: bin/musicman
# Generated by qmake (2.01a) (Qt 4.4.3) on: Mon Mar 9 20:28:28 2009
# Project:  collection_musique.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile collection_musique.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I. -Imoc -I.
LINK          = g++
LFLAGS        = -Wl,--no-undefined
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtSql -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = customsqlmodel.cpp \
		csvparser.cpp \
		main.cpp \
		sqlparser.cpp \
		vue.cpp moc/moc_customsqlmodel.cpp \
		moc/moc_csvparser.cpp \
		moc/moc_sqlparser.cpp \
		moc/moc_vue.cpp
OBJECTS       = obj/customsqlmodel.o \
		obj/csvparser.o \
		obj/main.o \
		obj/sqlparser.o \
		obj/vue.o \
		obj/moc_customsqlmodel.o \
		obj/moc_csvparser.o \
		obj/moc_sqlparser.o \
		obj/moc_vue.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		collection_musique.pro
QMAKE_TARGET  = musicman
DESTDIR       = bin/
TARGET        = bin/musicman

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) bin/ || $(MKDIR) bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: collection_musique.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtSql.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile collection_musique.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtSql.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile collection_musique.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/musicman1.0.0 || $(MKDIR) obj/musicman1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/musicman1.0.0/ && $(COPY_FILE) --parents connexion.h customsqlmodel.h csvparser.h sqlparser.h vue.h obj/musicman1.0.0/ && $(COPY_FILE) --parents customsqlmodel.cpp csvparser.cpp main.cpp sqlparser.cpp vue.cpp obj/musicman1.0.0/ && $(COPY_FILE) --parents collection_musique_en.ts obj/musicman1.0.0/ && (cd `dirname obj/musicman1.0.0` && $(TAR) musicman1.0.0.tar musicman1.0.0 && $(COMPRESS) musicman1.0.0.tar) && $(MOVE) `dirname obj/musicman1.0.0`/musicman1.0.0.tar.gz . && $(DEL_FILE) -r obj/musicman1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc/moc_customsqlmodel.cpp moc/moc_csvparser.cpp moc/moc_sqlparser.cpp moc/moc_vue.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc/moc_customsqlmodel.cpp moc/moc_csvparser.cpp moc/moc_sqlparser.cpp moc/moc_vue.cpp
moc/moc_customsqlmodel.cpp: customsqlmodel.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) customsqlmodel.h -o moc/moc_customsqlmodel.cpp

moc/moc_csvparser.cpp: csvparser.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) csvparser.h -o moc/moc_csvparser.cpp

moc/moc_sqlparser.cpp: sqlparser.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) sqlparser.h -o moc/moc_sqlparser.cpp

moc/moc_vue.cpp: vue.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) vue.h -o moc/moc_vue.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

obj/customsqlmodel.o: customsqlmodel.cpp customsqlmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/customsqlmodel.o customsqlmodel.cpp

obj/csvparser.o: csvparser.cpp csvparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/csvparser.o csvparser.cpp

obj/main.o: main.cpp vue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o main.cpp

obj/sqlparser.o: sqlparser.cpp sqlparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/sqlparser.o sqlparser.cpp

obj/vue.o: vue.cpp customsqlmodel.h \
		connexion.h \
		csvparser.h \
		vue.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/vue.o vue.cpp

obj/moc_customsqlmodel.o: moc/moc_customsqlmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_customsqlmodel.o moc/moc_customsqlmodel.cpp

obj/moc_csvparser.o: moc/moc_csvparser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_csvparser.o moc/moc_csvparser.cpp

obj/moc_sqlparser.o: moc/moc_sqlparser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_sqlparser.o moc/moc_sqlparser.cpp

obj/moc_vue.o: moc/moc_vue.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_vue.o moc/moc_vue.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

